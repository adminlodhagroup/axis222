
<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="LodhaSales"
    description="Matches and echoes 'Hello World' string in emails"
    height="20"
    author="Shrikanth and Prashant"
    author_email="..."
    author_location="Mumbai">

    <!-- Declare feature dependencies. -->

    <!-- This one is not specific to Gmail contextual gadgets. -->
    <Require feature="dynamic-height"/>

    <!-- The next feature, Caja, is optional, and is supported for
     use only within test domains. Uncomment the tag only for
     non-production gadgets. -->
    <!-- <Require feature="caja"/> -->

    <!-- The next feature, google.contentmatch, is required for all
     Gmail contextual gadgets.
     <Param> - specify one or more comma-separated extractor IDs in
     a param named "extractors". This line is overridden by the extractor ID
     in the manifest, but is still expected to be present. -->
    <!-- <Require feature="google.contentmatch">
      <Param name="extractors">
        google.com:HelloWorld
      </Param>
    </Require> -->

         <Require feature="google.contentmatch">
      <Param name="extractors">
        google.com:SenderEmailExtractor
      </Param>
    </Require>

  </ModulePrefs>

  <!-- Define the content type and display location. The settings
   "html" and "card" are required for all Gmail contextual gadgets. -->
  <Content type="html" view="card">
    <![CDATA[
      <!-- Start with Single Sign-On -->
      <script type="text/javascript" src="https://example.com/gadgets/sso.js"></script>
	  <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js">
	  
	  
	  
	  
	  </script>
	  
	  
      <script type="text/javascript">
 
        <!-- Fetch the array of content matches. -->
        matches = google.contentmatch.getContentMatches();
        var matchList = document.createElement('UL');
        var listItem;
        var extractedText;

        <!-- Iterate through the array and display output for each match. -->
        for (var match in matches) {
          for (var key in matches[match]) {
            listItem = document.createElement('LI');
            extractedText = document.createTextNode(key + ": " + matches[match][key]);
            listItem.appendChild(extractedText);
            matchList.appendChild(listItem);
			var email =matches[match][key];
			
          }
        }
		 document.body.appendChild(matchList);
			   var session = document.cookie.match(/(^|;\s*)sid=(.+?);/)[2];
    //calls Salesforce REST API with jQuery
	
$(document).ready(function()         {         
    jQuery.ajax({
        type: "GET",
		dataType: "json",
        url: "https://cs8.salesforce.com/services/data/v24.0/query/?q=SELECT+Name+FROM+Account+LIMIT+5",
        beforeSend: function (xhr) {
		
            xhr.setRequestHeader('Authorization', "OAuth " + session);
            xhr.setRequestHeader('Accept', "application/json");
			   xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
			  
            xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
		
        },
        success: function (data) {
		$.each(data, function(i, data){
		//alert(data + " ");
		//    listItem.appendChild(data);
			//  matchList.appendChild(listItem);
           //console.log(data);
        }
    }
		});	
            
		});
		
        gadgets.window.adjustHeight(100);	
		
		
		
		
		
		
		
      </script>
    ]]>
  </Content>
</Module>