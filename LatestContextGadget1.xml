<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Lodha"
    description="Building a Better Life"
    height="20"
    author="Srikanth and Prashanth"
    author_email="admin11@lodhagroup.in"
    author_location="Lodha Excelus,NM JOSHI MARG,Mumbai ">

    <!-- Declare feature dependencies. -->

    <!-- This one is not specific to Gmail contextual gadgets. -->
    <Require feature="dynamic-height"/>

    <!-- The next feature, Caja, is optional, and is supported for
     use only within test domains. Uncomment the tag only for
     non-production gadgets. -->
    <!-- <Require feature="caja"/> -->

    <!-- The next feature, google.contentmatch, is required for all
     Gmail contextual gadgets.
     <Param> - specify one or more comma-separated extractor IDs in
     a param named "extractors". This line is overridden by the extractor ID
     in the manifest, but is still expected to be present. -->
   
   <!--  <Require feature="google.contentmatch">
      <Param name="extractors">
        google.com:HelloWorld
      </Param>
    </Require> -->

	 <Require feature="google.contentmatch">
      <Param name="extractors">
        google.com:SenderEmailExtractor
      </Param>
    </Require>

  </ModulePrefs>

  <!-- Define the content type and display location. The settings
   "html" and "card" are required for all Gmail contextual gadgets. -->
  <Content type="html" view="card">
    <![CDATA[
      <!-- Start with Single Sign-On -->
      <script type="text/javascript" src="https://example.com/gadgets/sso.js"></script>
      <script type="text/javascript">

        <!-- Fetch the array of content matches. -->
        matches = google.contentmatch.getContentMatches();
        var matchList = document.createElement('UL');
        var listItem;
        var extractedText;

        <!-- Iterate through the array and display output for each match. -->
        for (var match in matches) {
          for (var key in matches[match]) {
             listItem = document.createElement('LI');
             extractedText = document.createTextNode(key + ": " + matches[match][key]);
             listItem.appendChild(extractedText);
             matchList.appendChild(listItem);
           
	        }
        }
        document.body.appendChild(matchList);
        gadgets.window.adjustHeight(100);
		   function showEmail(){
          alert("work in progress");
        }
      </script>
	 <form>
      <table border="0"> 
		<tr>
		  <td>
		   <button type="button" onclick="showEmail();"> Create Case </button> 
	      </td>
		  <td>&nbsp;</td>
		  <td>
		    <button type="button" onclick="showEmail();"> Add to Existing Case </button> 
		  </td>
		</tr>
      </table>
    </form>
    ]]>
  </Content>
</Module>